apiVersion: batch/v1
kind: CronJob
metadata:
  name: custom-backup-job
  namespace: longhorn-system
  labels:
    longhorn.io/managed-by: longhorn-manager
    recurring-job.longhorn.io: custom-backup-job
  annotations:
spec:
  schedule: {{ .Values.longhornContext.cron_job.schedules.backup_job }}
  concurrencyPolicy: Forbid
  suspend: false
  jobTemplate:
    metadata:
      creationTimestamp: null
    spec:
      backoffLimit: 3
      template:
        metadata:
          name: custom-backup-job
          creationTimestamp: null
          labels:
            longhorn.io/managed-by: longhorn-manager
            recurring-job.longhorn.io: custom-backup-job
        spec:
          volumes:
            - name: engine-binaries
              hostPath:
                path: /var/lib/longhorn/engine-binaries/
                type: ""
          containers:
            - name: custom-backup-job
              image: longhornio/longhorn-manager:v1.7.3
              command: ["/bin/sh", "-c"]
              args:
                - if ping -c 1 192.168.0.52 &>/dev/null; then
                  longhorn-manager -d recurring-job custom-backup-job --manager-url http://longhorn-backend:9500/v1;
                  else
                  echo "NAS not recheable. Skipping this session";
                  fi
              env:
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
              resources: {}
              volumeMounts:
                - name: engine-binaries
                  mountPath: /var/lib/longhorn/engine-binaries/
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              imagePullPolicy: IfNotPresent
          restartPolicy: OnFailure
          terminationGracePeriodSeconds: 30
          dnsPolicy: ClusterFirst
          serviceAccountName: longhorn-service-account
          serviceAccount: longhorn-service-account
          securityContext: {}
          schedulerName: default-scheduler
